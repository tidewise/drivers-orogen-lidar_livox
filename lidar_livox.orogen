name "lidar_livox"
# Optionally declare the version number
# version "0.1"

# If new data types need to be defined, they have to be put in a separate C++
# header, and this header will be loaded here
import_types_from "lidar_livoxTypes.hpp"
# Finally, it is pretty common that headers are directly loaded from an external
# library. In this case, the library must be first used (the name is the
# library's pkg-config name) and then the header can be used. Following Rock
# conventions, a common use-case would be:
#
# using_library "lidar_livox"
using_library "lidar_livox_sdk"
using_library "jsoncpp", typekit: false

import_types_from "std"
import_types_from "base"

task_context "Task" do
    needs_configuration

    property "config_lidar_net_info", "/lidar_livox/LidarNetInfo"
    property "config_host_net_info", "/lidar_livox/HostNetInfo"
    property "number_of_measurements_per_pointcloud", "int"
    output_port "point_cloud", "/base/samples/Pointcloud"

    periodic 0.1
end

